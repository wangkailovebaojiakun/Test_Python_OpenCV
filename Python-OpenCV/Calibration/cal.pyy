import cv2
import numpy as np
import glob
#termination criteria
criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER,30,0.001)
#prepar object points,like(0,0,0),(1,0,0),(2,0,0).....(6,5,0)
objp = np.zeros((6*7,3),np.float32)
objp[:,:2] = np.mgrid[0:7,0:6].T.reshape(-1,2)
#Arrays to store object points and image points from all the images
objpoints = []#3d point in read world space(in Zhang's method Z is 0)
imgpoints = []#2d points in image plane
images = glob.glob('*.jpg')
for fname in images:
    img = cv2.imread(fname)
    print bool(img.data),'name'+fname
    #cv2.imshow('test',img)
    #cv2.waitKey(30)
    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
    #Find the chess board corners
    ret, corners = cv2.findChessboardCorners(gray,(7,6),None)
    #If found,add object points,image points(after refining them)
    if ret == True:
        objpoints.append(objp)
        print bool(img.data)
	corners2 =cv2.cornerSubPix(gray,corners,(11,11),(-1,-1),criteria)
	imgpoints.append(corners2)
	#draw and display the corners
	cv2.drawChessboardCorners(img,(7,6),corners2,ret)
        print bool(img.data)
        cv2.imshow('img',img)
	cv2.waitKey(500)

cv2.destroyAllWindows()    

